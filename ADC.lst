C51 COMPILER V9.54   ADC                                                                   11/25/2018 07:37:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN ADC.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE ADC\ADC.c OPTIMIZE(3,SPEED) BROWSE INCDIR(.\ADC;.\Deja_vu;.\Global;.\int
                    -errupt;.\Main;.\Motor;.\PWM;.\Timer;.\USART;..\DC_motors;.\Task;.\Buzzer;.\LED) DEFINE(DEBUG) DEBUG OBJECTEXTEND PRINT(.
                    -\ADC.lst) TABS(2) OBJECT(ADC.obj)

line level    source

   1          #include"GLOBAL.H"
   2          #include"USART.H"
   3          #include<ADC.H>
   4          
   5          /*----------------------------
   6          初始化ADC
   7          ----------------------------*/
   8          void ADC_init(void)
   9          {
  10   1          P1ASF = 0xff;                   //设置P1为ADC引脚
  11   1          ADC_RES = 0;                    //清除结果寄存器
  12   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ADC_START | channel;
  13   1          Delay(2);                       //ADC上电并延时
  14   1        
  15   1      }
  16          
  17          //软件查询方式
  18          /*----------------------------
  19          发送ADC结果到PC
  20          ----------------------------*/
  21          void ADCResult_showing(uchar channel)
  22          {
  23   1          Data_sending(adc[channel]);     //显示ADC高8位结果
  24   1      }
  25          
  26          /*----------------------------
  27          读取ADC结果
  28          ----------------------------*/
  29          void ADCResult_getting(void)
  30          {
  31   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL | channel | ADC_START;
  32   1          _nop_();                        //等待4个NOP
  33   1          _nop_();
  34   1          _nop_();
  35   1          _nop_();
  36   1          while (!(ADC_CONTR & ADC_FLAG));//等待ADC转换完成
  37   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
  38   1        
  39   1          adc[channel] = ADC_RES;    //将ADC结果存入数组相应位
  40   1          //Data_sending(ADC_RES);  //读取高8位结果并发送到串口
  41   1        
  42   1          if(++channel > 7)
  43   1          channel = 0;  //切换到下一个通道
  44   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ADC_START | channel;  
  45   1      }
  46          
  47          
  48          /*******************************************************************************
  49          *                           陈苏阳@2018-11-25
  50          * Function Name  :  ADC_Get_Channel_Data
  51          * Description    :  获取指定ADC通道的转换结果
  52          * Input          :  uchar _channel
  53          * Output         :  unsigned char
C51 COMPILER V9.54   ADC                                                                   11/25/2018 07:37:20 PAGE 2   

  54          * Return         :  None
  55          *******************************************************************************/
  56          unsigned char ADC_Get_Channel_Data(uchar _channel)
  57          {
  58   1          ADC_CONTR = ADC_POWER | ADC_SPEEDH | _channel | ADC_START;
  59   1          _nop_();                        //等待4个NOP
  60   1          _nop_();
  61   1          _nop_();
  62   1          _nop_();
  63   1          while (!(ADC_CONTR & ADC_FLAG));//等待ADC转换完成
  64   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
  65   1      
  66   1          return ADC_RES;
  67   1      }// End of unsigned char ADC_Get_Channel_Data(uchar _channel)
  68           
  69          /*----------------------------
  70          ADC数据处理
  71          ----------------------------*/
  72          void Data_processing(void) 
  73          {   
  74   1        uchar i = 0;
  75   1        situation=0x00;
  76   1        for(i = 0; i <8 ; i++)
  77   1        {
  78   2          if(adc[i]>=gray[i])
  79   2          {
  80   3            situation|=(0x01<<i);
  81   3          }
  82   2          else
  83   2          {
  84   3            situation&=(~(0x01<<i));
  85   3          }
  86   2        }
  87   1      }
  88          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    168    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
